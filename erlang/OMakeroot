########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# The standard OMakeroot file.
# You will not normally need to modify this file.
# By default, your changes should be placed in the
# OMakefile in this directory.
#
# If you decide to modify this file, note that it uses exactly
# the same syntax as the OMakefile.
#

#
# Include the standard installed configuration files.
# Any of these can be deleted if you are not using them,
# but you probably want to keep the Common file.
#
open build/C
open build/OCaml
open build/LaTeX

# sth like OTP.om
public.ERLC=$(shell which erlc)
public.SRCDIR=src
public.EBIN=ebin
public.ERLCFLAGS=-DDEBUG +debug_info -Wall
public.ERL=erl
public.ROOT=$(shell pwd)

public.BEAM_EXT=.beam
public.ERL_EXT=.erl

public.INCLUDES[] = include
public.INCLUDES_OPT = -I
#
# Add the -I option to the includes lazily.
# Don't redefine this variable unless you know what you are doing.
#
#public.PREFIXED_INCLUDES = $`(addprefix $(INCLUDES_OPT), $(INCLUDES))

#%$(BEAM_EXT): %$(ERL_EXT) #:scanner: scan-erl-%$(ERL_EXT)
#    $(ERLC) $(ERLCFLAGS) $(PREFIXED_INCLUDES) $<

MakeBeams(names) =
    erl2beam(name) =
	private.beam = $(EBIN)/$(removesuffix $(basename $(name)))$(BEAM_EXT)
        $(beam): $(name)
            $(ERLC) $(ERLCFLAGS) -pa $(EBIN) $(PREFIXED_INCLUDES) -o $(EBIN) $<
#            $(ERL) -pa $(EBIN) -noshell -eval '$(removesuffix $(basename $(name))):test().' -s init stop 
	return $(string $(beam))
    private.beams=$(names.map $(erl2beam))
    return $(beams)

erls=$(glob $(string $(SRCDIR)/*$(ERL_EXT)))
beams=$(MakeBeams $(erls))
apps= #$(glob $(string $(EBIN)/*.app))

#
# The command-line variables are defined *after* the
# standard configuration has been loaded.
#
DefineCommandVars()

#
# Include the OMakefile in this directory.
#
.SUBDIRS: .
